/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.DefaultCellEditor;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author skhas
 */

public class ItemsAndBilling extends javax.swing.JFrame {
    
    static Integer total=0;
    static ArrayList<String> item_contain=new ArrayList<String>();
    ResultSet rs;
    /**
     * Creates new form ItemsAndBilling
     */
    public ItemsAndBilling() {
        initComponents();
        SimpleDateFormat dformat=new SimpleDateFormat("dd-M-yyyy");
        Date date=new Date();
        jLabel5.setText(dformat.format(date));
        DateTimeFormatter dtf=DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime now=LocalDateTime.now();
        jLabel6.setText(dtf.format(now));
        ArrayList<String> list_items= new ArrayList<String>();
        ArrayList<String> list_desc= new ArrayList<String>();
        ArrayList<Integer> list_price= new ArrayList<Integer>();
        
        //Model for the jTabel1 Table
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        model.addColumn("ITEMS");
        model.addColumn("DESCRIPTION");
        model.addColumn("PRICE");
        model.addColumn("ADD");
        model.addColumn("REMOVE");
       
        
        jTable1.getTableHeader().setForeground(Color.BLACK);
        jTable1.getTableHeader().setFont(new Font("timesofrowman", Font.BOLD, 18));
        jTable1.setRowHeight(35);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(5);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(2);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(2);
        
            
            //Getting data from the Database
            
            try {
             Connection con= ConnectionProvider.getCon();
             Statement stmt=con.createStatement();
            rs= stmt.executeQuery("SELECT * FROM ITEMS");
            while(rs.next()){
                String item_name=rs.getString("name");
                String item_desc=rs.getString("description");
                int item_price=rs.getInt("price");
                Object[] rowData={item_name,item_desc,item_price};
                list_items.add(item_name);
                list_desc.add(item_desc);
                list_price.add(item_price);
                model.addRow(rowData);
               }
            } catch (SQLException ex) {
            Logger.getLogger(ItemsAndBilling.class.getName()).log(Level.SEVERE, null, ex);
        }
         catch(ArrayIndexOutOfBoundsException e){
             System.out.println("Here it happened");
         }
            
        //FOR BILLING TABLE BUTTON FUNCTIONS
        DefaultTableModel model1= (DefaultTableModel)jTable2.getModel();
        jTable2.setRowHeight(30);
        jTable2.getTableHeader().setBackground(Color.yellow);
        jTable2.getTableHeader().setAlignmentX(4);
        jTable2.getTableHeader().setForeground(Color.BLACK);
        jTable2.getTableHeader().setFont(new Font("verdana",Font.BOLD,18));  
            //SET CUSTOM RENDERER TO TEAMS COLUMN
          jTable1.getColumnModel().getColumn(3).setCellRenderer(new ButtonRenderer());
          //SET CUSTOM EDITOR TO TEAMS COLUMN
          jTable1.getColumnModel().getColumn(3).setCellEditor(new ButtonEditor(new JTextField(),jTable1,list_items,list_price,model1,jLabel3,jTable2)); 
             //SET CUSTOM RENDERER TO TEAMS COLUMN
          jTable1.getColumnModel().getColumn(4).setCellRenderer(new ButtonRenderer1());
          //SET CUSTOM EDITOR TO TEAMS COLUMN
          jTable1.getColumnModel().getColumn(4).setCellEditor(new ButtonEditor1(new JTextField(),jTable1,list_items,list_price,model1,jLabel3,jTable2)); 

          
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(305, 220));
        setMaximumSize(new java.awt.Dimension(1297, 757));
        setMinimumSize(new java.awt.Dimension(1297, 757));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1297, 757));
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 377, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 576, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2928, 53, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 680, 150, 38));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("       TOTAL:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 580, 164, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("0");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 580, 116, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "quantity"
            }
        ));
        jTable2.setRowHeight(25);
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 190, 420, 364));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable1.setRowHeight(20);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 790, 420));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel1.setText("MENU & BILLING");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close (1).png"))); // NOI18N
        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 680, 110, 40));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reset.png"))); // NOI18N
        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 680, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 650, 1240, 10));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("dd-mm-yyyy");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 50, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("hh:mm:ss");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 90, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("DATE");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 50, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("TIME");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 90, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/billing_background.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int amount = Integer.parseInt(jLabel3.getText());
        int inc = 1;
    
        try
		{
                
             Connection con= ConnectionProvider.getCon();
             Statement stmt=con.createStatement();
                //inserting into the table
                
                String sqlQuery1="select max(id) from transactions";
		ResultSet rss=stmt.executeQuery(sqlQuery1);
                
                while(rss.next()){
		 inc = rss.getInt(1)+1;
                }
                String sqlQuery2="insert into transactions values(" + inc+ ",sysdate,"+amount+")";
                stmt.executeUpdate(sqlQuery2);
	        con.close();
		}
		catch(Exception e)
		{
			System.out.println("exception: "+e);
		}    
        
        String path="D:\\";
        com.itextpdf.text.Document doc=new com.itextpdf.text.Document();
        try{
            PdfWriter.getInstance(doc, new FileOutputStream(path+" "+jLabel5.getText()+".pdf"));
            doc.open();
            Paragraph para =new Paragraph("                                              BILLING MANAGEMENT SYSTEM\n                        ");
            doc.add(para);
            
            Paragraph para1=new Paragraph("     Date  :  "+jLabel5.getText()+"                                                                           Time  :  "+jLabel6.getText()+"\n\n");
            doc.add(para1);
            Paragraph par =new Paragraph("      Restaurant Name      :   Taste Of South\n       Restaurant Address   :   Batchpally, Hyderabad ");
            doc.add(par);
            Paragraph par1 =new Paragraph("      Order ID : "+inc+"\n\n");
            doc.add(par1);
            PdfPTable tb1=new PdfPTable(3);
            tb1.addCell("Name");
            tb1.addCell("Price");
            tb1.addCell("Quantity");
            for(int i=0;i<jTable2.getRowCount();i++){
                String n=jTable2.getValueAt(i, 0).toString();
                String r=jTable2.getValueAt(i, 1).toString();
                String q=jTable2.getValueAt(i, 2).toString();
                tb1.addCell(n);
                tb1.addCell(r);
                tb1.addCell(q);
            }
            doc.add(tb1);
            Paragraph para2=new Paragraph("\n      Total  :  "+jLabel3.getText()+"\n\n                                    Thank You For Visiting !Please Visit Again..\n");
            doc.add(para2);
            
            JOptionPane.showMessageDialog(null, "Saved - Bill Generated");
            
            setVisible(false);
            new ItemsAndBilling().setVisible(true);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        doc.close();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ItemsAndBilling().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemsAndBilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemsAndBilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemsAndBilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemsAndBilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemsAndBilling().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
    
}

//BUTTON RENDERER CLASS
class ButtonRenderer extends JButton implements  TableCellRenderer
{

  //CONSTRUCTOR
  public ButtonRenderer() {
    //SET BUTTON PROPERTIES
    setOpaque(true);
  }
  @Override
  public Component getTableCellRendererComponent(JTable jTable1, Object obj,
      boolean selected, boolean focused, int row, int col) {

    //SET PASSED OBJECT AS BUTTON TEXT
      setText((obj==null) ? "Add":obj.toString());

    return this;
  }

}


//BUTTON EDITOR CLASS
class ButtonEditor extends DefaultCellEditor
{
  protected JButton btn;
   private String lbl;
   private Boolean clicked;

   public ButtonEditor(JTextField txt,JTable jTable1,ArrayList<String> list_items,ArrayList<Integer> list_price,DefaultTableModel model,JLabel total,JTable jTable2) {
    super(txt);

    btn=new JButton();
    btn.setOpaque(true);

    //WHEN BUTTON IS CLICKED
    btn.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        int row=jTable1.getSelectedRow();
        try{
        //Inserting into the model1 of the billing table
        if(!ItemsAndBilling.item_contain.contains(list_items.get(row))){
        Object[] rowdata={list_items.get(row),list_price.get(row),"1"};
        model.addRow(rowdata);
        ItemsAndBilling.item_contain.add(list_items.get(row));
        }
        else{
         int p = 0;
         int index=ItemsAndBilling.item_contain.indexOf(list_items.get(row));
         try{
             Object quantity= jTable2.getValueAt(index,2);
             p=Integer.valueOf((String) quantity);
         }
         catch(ClassCastException c){
             p=(int) jTable2.getValueAt(index,2);
         }
         jTable2.setValueAt(p+1,index,2);
         System.out.println(p);
        }
        
        ItemsAndBilling.total +=list_price.get(row);
        String text=ItemsAndBilling.total+"";
        total.setText(text);
        }
        catch(ClassCastException c)
            {
                System.out.println(c);
            }
        catch(ArrayIndexOutOfBoundsException p){
            System.out.println("Oops");
        }
        
      }
    });
  }

   //OVERRIDE A COUPLE OF METHODS
   @Override
  public Component getTableCellEditorComponent(JTable jTable1, Object obj,
      boolean selected, int row, int col) {

      //SET TEXT TO BUTTON,SET CLICKED TO TRUE,THEN RETURN THE BTN OBJECT
     lbl=(obj==null) ? "Add":obj.toString();
     btn.setText(lbl);
     clicked=true;
    return btn;
  }

  //IF BUTTON CELL VALUE CHNAGES,IF CLICKED THAT IS
   @Override
  public Object getCellEditorValue() {

     if(clicked)
      {
      //SHOW US SOME MESSAGE
        JOptionPane.showMessageDialog(btn, lbl+" Clicked");
      }
    //SET IT TO FALSE NOW THAT ITS CLICKED
    clicked=false;
    return new String(lbl);
  }

   @Override
  public boolean stopCellEditing() {

         //SET CLICKED TO FALSE FIRST
      clicked=false;
    return super.stopCellEditing();
  }

   @Override
  protected void fireEditingStopped() {
    // TODO Auto-generated method stub
    super.fireEditingStopped();
  }
}





//Button operations for jTbable2
//BUTTON RENDERER CLASS
class ButtonRenderer1 extends JButton implements  TableCellRenderer
{

  //CONSTRUCTOR
  public ButtonRenderer1() {
    //SET BUTTON PROPERTIES
    setOpaque(true);
  }
  @Override
  public Component getTableCellRendererComponent(JTable jTable2, Object obj,
      boolean selected, boolean focused, int row, int col) {

    //SET PASSED OBJECT AS BUTTON TEXT
      setText((obj==null) ? "Remove":obj.toString());

    return this;
  }

}


//BUTTON EDITOR CLASS
class ButtonEditor1 extends DefaultCellEditor
{
  protected JButton btn;
   private String lbl;
   private Boolean clicked;

   public ButtonEditor1(JTextField txt,JTable jTable1,ArrayList<String> list_items,ArrayList<Integer> list_price,DefaultTableModel model,JLabel total,JTable jTable2) {
    super(txt);

    btn=new JButton();
    btn.setOpaque(true);

    //WHEN BUTTON IS CLICKED
    btn.addActionListener(new ActionListener() {

      @Override
      public void actionPerformed(ActionEvent e) {
        System.out.println("Added");
        //GETTING THE ROW OF THE SELECTED
        int row=jTable1.getSelectedRow();
        
        try{
         
         int p = 0;
         int index=ItemsAndBilling.item_contain.indexOf(list_items.get(row));
        try{
        p=(int) jTable2.getValueAt(index,2);
        }
        catch(Exception em){
            Object quantity = jTable2.getValueAt(index,2);
            p = Integer.valueOf((String) quantity);
        }
        if(p!=1){
            jTable2.setValueAt(p-1,index,2);
            System.out.println(p); 
        }
        else
        {
            if(ItemsAndBilling.item_contain.contains(list_items.get(row))){
             model.removeRow(index);
             ItemsAndBilling.item_contain.remove(index);
        }
        }
        
        
        //DECREASING THE TOTAL
        ItemsAndBilling.total -=list_price.get(row);
        String text=ItemsAndBilling.total+"";
        total.setText(text);  
        
        
        }
        catch(ClassCastException c)
            {
                System.out.println(c);
            }
        catch(ArrayIndexOutOfBoundsException p){
            System.out.println("Oops");
        }
      }
    });
  }

   //OVERRIDE A COUPLE OF METHODS
   @Override
  public Component getTableCellEditorComponent(JTable jTable2, Object obj,
      boolean selected, int row, int col) {

      //SET TEXT TO BUTTON,SET CLICKED TO TRUE,THEN RETURN THE BTN OBJECT
     lbl=(obj==null) ? "Remove":obj.toString();
     btn.setText(lbl);
     clicked=true;
    return btn;
  }

  //IF BUTTON CELL VALUE CHNAGES,IF CLICKED THAT IS
   @Override
  public Object getCellEditorValue() {

     if(clicked)
      {
      //SHOW US SOME MESSAGE
        JOptionPane.showMessageDialog(btn, lbl+" Clicked");
      }
    //SET IT TO FALSE NOW THAT ITS CLICKED
    clicked=false;
    return new String(lbl);
  }

   @Override
  public boolean stopCellEditing() {

         //SET CLICKED TO FALSE FIRST
      clicked=false;
    return super.stopCellEditing();
  }

   @Override
  protected void fireEditingStopped() {
    // TODO Auto-generated method stub
    super.fireEditingStopped();
  }
}

